When would you want to use a remote repository rather than keeping all your work
local?

    If you are going to work on the file from multiple locations accessing the file becomes easier with a remote repository. 

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You have more control doing it yourself and if you are working with others on some project you might want to see the changes
    they made before you pull them to your local files.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks are useful when you want to copy or work on someone's repository and can't or don't want to alter the original. 
    Cloning lets you copy a repository for yourself so you can work on it offline.
    Branches are a way for you to test some theories or ideas without messing up the main code until you are sure you wnat to add them.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    If a problem occurs after multiple people add to the collaborated repository, you can revert back to a point before all of them 
    and start figuring out which one caused problems.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Organizing a meeting with the others and discussing possible changes and stuff. Responses and planning would be faster with everyone
    present, but organizing the meeting in the first place probably wouldn't be.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    If your not sure you want the changes or you want more opinions on the changes before actually doing them, a different branch
    could be the solution. If you're certain about the changes or they need to happen fast, master could be the way to go.